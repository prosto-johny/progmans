
Инфа отсюда https://aws.amazon.com/ru/blogs/rus/media-part-1-back-to-basics-gops-explained/

Два типа сжатия:
  * Временное - есть ключевой кадр, а последующая информация - не о самих кадрах, а только об отличиях от ключевого. Сжатие за счет этого.
    Когда происходит сильное изменение сцены, берется новый ключевой кадр. Соответственно,
  * Пространственное - грубо говоря, если во временном брался целый кадр, а последующая информация - это информация об отличиях, то здесь берется группа пикселей, а для следующей группы пикселей сохраняется только информация об отличиях от предыдущей группы. Соответственно, вся информация, необходимая для декодирования кадра, есть в нем самом, в отличие от временного.

"Ключевые кадры" - офф название I-кадры (intra-coded frame), "интра" в значении "закодирован сам в себе", кодируются пространственным сжатием.
I-кадры едят больше всего места.
Еще есть P-кадры и B-кадры (Predicted, прогнозируемый, delta-frames и Bi-predicted, двунаправленный прогноз). Их суть в том, что они используют сразу оба типа сжатия, и В, и П, за счет чего едят меньше всего места. 
  * Суть P-кадра - (упрощаю, деталей не понял, возможна ошибка) - хз, не могу адекватно написать даже.

GOP - расстояние между двумя I-кадрами. Обычно от 0.5 до 2 секунд.
Нет, это не расстояние похоже... Это структура последовательности расположения I, B и P кадров.

В целом влияние GOP на видео такое: цель кодирования - вместить изображение в заданный битрейт. Сперва я не понимал, почему "короткий гоп при низком битрейте" дает плохое качество изображения. Думал, что ведь типа чем больше ключевых кадров, тем лучше. Но потом кажется понял. Во-первых, ничего не передается в реальном времени - там есть некая буферизация всегда в кодировании\раскодировании. А во-вторых... А во-вторых, я опять не понял) Надо короче будет лично закодировать и проверить. Вероятно, они просто перепутали картинки местами или хз в чем дело. Ведь нельзя, насколько я понимаю, "сэкономить" битрейт и закодировать в 2.5Мбитном видео ключевой кадр за 10Мбит, а потом несколько раз сохранить его отличия, так что на 4 кадра типа как по 2.5 получится в среднем... Тогда не понятно, какая разница, какая длина гоп. Грубо говоря, чем она длиньше, тем видео должно жрать меньше, но будет хуже качество, я так понимаю.

С другой стороны, а что если как раз можно "сэкономить"? Ведь раз буферизуется все, и кадры не в реальном времени (хотя это я сам придумал), то что нам мешает как раз "пожирнее" закодировать I-кадр, а потом докинуть изменения оставшимся трафиком?

Кажется, чтобы лучше понимать, нужно отвязать понятие "кадра" от непосредственно картинки. Т.е. условный "P-кадр" это не "картинка", это возможно "массив" некоторой информации, в котором есть ссылки на сжатую информацию из предыдущего "кадра", так что этот "кадр" жрет меньше, чем предыдущий, т.к. он уже собственно и не хранит эту инфрмацию. А т.к. у B-кадра эти "ссылки" на инфу из и предыдущего, и следущего, то он жрет еще меньше.
  
с этого же сайта пример для ffmpeg
$ ffmpeg -i SAMPLE_MOVIE.mp4 -c:v libx264 -b:v 4M -x264-params keyint=24:bframes=2 OUTPUT.mp4

Под кадром имеется ввиду наверное все же картинка, судя по фразе "три последовательных кадра при 30 fps".
GOP - Group Of Pictures, или можно сказать "группа >кодируемых< изображений". Т.к. если кодировать каждое изображение в кадре, сжатие будет слабое. А вот если закодировать сразу "группу", тогда сжатие хорошее. И вот эта самая "группа" начинается с I-кадра, за которым идет последовательность B и P-кадров. А когда начинается следующий I-кадр, это уже другая группа. Соответственно, длина GOP настривается.

Вот, кажется опять что понял: 2.5 Mbit\s - мегабит на секунду, а не на гоп. Т.е. если гоп будет 0.5 сек, значит в 1 секунде будет 2 прожорливых I-кадра, и грубо говоря на каждый I-кадр нужно будет отдать по 1.25 Мбит (опустим B-P кадры для наглядности). А если гоп 1 секунда, тогда I-кадру дадут 2.5 Мбит. Если гоп 2 секунды, тогда вероятно I-кадру вообще достанется 5 Мбит (Но это конечно не точно) и качество будет еще лучше .
Только вот интересно, а что будет если гоп сделать больше? Глюки или как? А может просто неэффективно будет хранить только изменения, из-за смены сцен?

