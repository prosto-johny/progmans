
    Конспект из http://ffmpeg.org/ffmpeg.html#Synopsis Примеры составлены проверены на основе инфы с этой страницы.

    -y - global параметр (global). Перезаписывать файлы без подтверждения
    -n - (global) Не перезаписывать файлы и прекращать операцию, если файл с указанным именем уже существует

    . Излечь стрим без декодирования можно с помощью параметра -copy. В этом случае будет произведен только демукс.
        . Пример ffmpeg -i src.mp4 -c:v copy src_original.mp4
            . -c - сокращение слова codec
            . v - указываем, что работаем с видео
            . copy - не декодировать
            . src_original.mp4 - имя выходного файла

    . Задать параметры кодирования сразу для всех стримов
        . Пример с аудиостримами ffmpeg -i src.mp4 -c:a mp3 -b:a 192k -map 0:1 mix.mp3 -map 0:2 gam.mp3 -map 0:3 mic.mp3
            . -c:a mp3 - без указания конкретного аудиострима говорит использовать кодек mp3 при кодировании каждого аудиострима
            . -b:a 192k - без указания конкретного аудиострима говорит использовать битрейт 192k при кодировании каждого аудиострима
            . -map 0:1 mix.mp3 - говорит поместить аудиострим 1 в файл mix.mp3 итд

    . Скопировать фрагмент определенной длины        
        . С начала файла
            . Пример ffmpeg -t 1:00 -i src.mp4 -c:v copy -c:a copy cut.mp4
                . -t 1:00 - формат HH:MM:SS.ms можно задать одно, два или три числа и программа сама поймет, сколько вырезать
                . -c:v copy -c:a copy - оставить параметры аудио и видео как в оригинальном файле

        . С определенного момента и до конца файла
            . Пример ffmpeg -ss 2:00 -i src.mp4 -c:v copy -c:a copy cut.mp4
                . -ss 2:00 - формат HH:MM:SS.ms начать копирование со второй минуты и до конца файла

        . С определенного момента ОТ конца файла
            . Пример ffmpeg -sseof -2:00 -i src.mp4 -c:v copy -c:a copy cut.mp4
                . -sseof -2:00 - начать копирование со второй минуты от конца файла. Проще говоря, скопировать две последние минуты. Число обязательно задается с минусом.

        . Указанную длительность с определенного момента
            . Пример ffmpeg -ss 2:00 -i src.mp4 -c:v copy -c:a copy -t 1:30 cut.mp4
                . -t 1:30 - вместе с -ss 2:00 дает команду скопировать полторы минуты, начиная со второй минуты

        . С определенного момента по определенный момент. Работает странно, но другого способа я не нашел. Нужно взять время, ПО которое надо копировать и вычесть из него время, С которого. Полученное значение задать как -t в синтаксисе output.
            . Пример ffmpeg -ss 5:00 -i src.mp4 -c:v copy -c:a copy -t 35:00 cut.mp4 скопирует с пятой по сороковую минуту. Фактически то же самое, что и предыдущий пример, только размышлять об этом надо несколько иначе.

        Теория:
            . -t (output|input) - параметр может выступать как input- и как output-параметр. Если input, то позволяет задать длину, КОТОРУЮ надо обработать. Если output, то прерывает обработку, когда результирующий файл станет ЗАДАННОЙ длины. Тащем-та это, вроде бы, одно и то же.

            . -to (output) - судя по описанию, должен прерывать запись, когда будет достигнута позиция. В комбинации с ss должен давать эффект "скопировать с 2:00 по 4:30". Однако не работает почему-то.

            . -ss (output|input) - если input, то задает позицию, С которой надо обрабатывать. Если output - я не понял)

            . -sseof (input|output) - если input, то задает позицию С которой надо обрабатывать, но отсчет ведется от КОНЦА файла. Значение времени при этом должно быть отрицательным.